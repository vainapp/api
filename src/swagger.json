{
  "openapi": "3.0.0",
  "info": {
    "title": "Vain API",
    "description": "API responsible for the website, management system and app.",
    "termsOfService": "https://vainapp.com.br/terms-of-use",
    "contact": {
      "email": "oi@vainapp.com.br"
    },
    "version": "development-version"
  },
  "servers": [
    {
      "url": "https://api-dev.vainapp.com.br",
      "description": "Development server"
    },
    {
      "url": "https://api.vainapp.com.br",
      "description": "Production server"
    }
  ],
  "paths": {
    "/companies/pre-signup": {
      "post": {
        "summary": "Check company availability",
        "description": "Check if the company is available and redirect to the correct sign-up step.",
        "tags": ["Companies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreSignUpRequest"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "The company is available."
          },
          "200": {
            "description": "The company already has a sign-up in progress and the user should be redirected to the correct step.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/PreSignUpResponse"
                }
              }
            }
          },
          "403": {
            "description": "The email address provided is already taken."
          },
          "400": {
            "description": "Body validation failed."
          }
        }
      }
    },
    "/companies": {
      "post": {
        "summary": "Create company and generate an admin account to it",
        "description": "Create a new company and generate an admin account to it so the user can access the management system.",
        "tags": ["Companies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The company was created and the user has received a verification email.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/SignUpResponse"
                }
              }
            }
          },
          "403": {
            "description": "The email address provided is already taken."
          },
          "400": {
            "description": "Body validation failed."
          }
        }
      }
    },
    "/companies/verify-email/:email_verification_link_id": {
      "get": {
        "summary": "Verify email address",
        "description": "Verify the email address provided by the user.",
        "tags": ["Companies"],
        "parameters": [
          {
            "name": "email_verification_link_id",
            "in": "path",
            "description": "The email verification link ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "price_id",
            "in": "query",
            "description": "The price ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "The email address was verified and the user should be redirected to the phone number verification page."
          },
          "404": {
            "description": "The email verification link ID is invalid or expired."
          }
        }
      }
    },
    "/companies/verify-phone-number": {
      "post": {
        "summary": "Verify phone number",
        "description": "Verify the phone number provided by the user.",
        "tags": ["Companies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The phone number was verified."
          },
          "404": {
            "description": "The SMS code is invalid or expired."
          },
          "400": {
            "description": "Body validation failed."
          }
        }
      }
    },
    "/companies/verify-email/resend": {
      "post": {
        "summary": "Resend email verification",
        "description": "Resend the email verification email.",
        "tags": ["Companies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResendEmailVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email verification email was resent."
          },
          "403": {
            "description": "The email address provided is already verified."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Email not found or the email verification link is invalid or expired."
          }
        }
      }
    },
    "/companies/verify-phone-number/resend": {
      "post": {
        "summary": "Resend phone number verification",
        "description": "Resend the phone number verification SMS.",
        "tags": ["Companies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPhoneNumberVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The phone number verification SMS was resent."
          },
          "403": {
            "description": "The phone number provided is already verified."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Account not found or the phone number SMS code is invalid or expired."
          }
        }
      }
    },
    "/companies/payments/checkout-session": {
      "post": {
        "summary": "Create a checkout session",
        "description": "Create a checkout session for the user to pay for the subscription.",
        "tags": ["Companies"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckoutSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The checkout session was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/CreateCheckoutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "Account is not verified or the user is not administrator."
          },
          "404": {
            "description": "Company or employee not found."
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health check",
        "description": "Check if the API is up and running.",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "API is up and running."
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "User account creation",
        "description": "Create a user account and send an email verification.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user account was created and the email verification was sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserSignUpResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "This email address is already in use."
          }
        }
      }
    },
    "/users/verify-email/:email_verification_link_id": {
      "get": {
        "summary": "Verify email address",
        "description": "Verify the email address provided by the user.",
        "tags": ["Users"],
        "parameters": [
          {
            "name": "email_verification_link_id",
            "in": "path",
            "description": "The email verification link ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "The email address was verified."
          },
          "404": {
            "description": "The email verification link ID is invalid or expired."
          }
        }
      }
    },
    "/users/verify-phone-number": {
      "post": {
        "summary": "Verify phone number",
        "description": "Verify the phone number provided by the user.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerifyPhoneNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The phone number was verified."
          },
          "404": {
            "description": "The SMS code is invalid or expired."
          },
          "400": {
            "description": "Body validation failed."
          }
        }
      }
    },
    "/users/verify-email/resend": {
      "post": {
        "summary": "Resend email verification",
        "description": "Resend the email verification email.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendEmailVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email verification email was resent."
          },
          "403": {
            "description": "The email address provided is already verified."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Email not found or the email verification link is invalid or expired."
          }
        }
      }
    },
    "/users/verify-phone-number/resend": {
      "post": {
        "summary": "Resend phone number verification",
        "description": "Resend the phone number verification SMS.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResendPhoneNumberVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The phone number verification SMS was resent."
          },
          "403": {
            "description": "The phone number provided is already verified."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Account not found or the phone number SMS code is invalid or expired."
          }
        }
      }
    },
    "/users/profile-photo": {
      "post": {
        "summary": "Upload profile photo",
        "description": "Upload a profile photo.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The profile photo was uploaded.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserProfilePhotoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Account not found."
          }
        }
      }
    },
    "/users/profile-photo/:profile_photo_id": {
      "delete": {
        "summary": "Delete profile photo",
        "description": "Delete the profile photo.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "profile_photo_id",
            "in": "path",
            "description": "The profile photo ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The profile photo was deleted."
          },
          "404": {
            "description": "Profile picture not found."
          }
        }
      }
    },
    "/users/change-password": {
      "put": {
        "summary": "Change password",
        "description": "Change the password.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The password was changed."
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "The old password is incorrect."
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "summary": "Get user",
        "description": "Get the user.",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "The user was retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/passwords/forgot": {
      "post": {
        "summary": "Forgot password",
        "description": "Send a forgot password email.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The forgot password email was sent."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/users/passwords/verify": {
      "post": {
        "summary": "Verify forgot password",
        "description": "Verify the forgot password token.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserVerifyForgotPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The forgot password token was verified.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserVerifyForgotPasswordResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "User not found or the forgot password token is invalid or expired."
          }
        }
      }
    },
    "/users/passwords/reset": {
      "post": {
        "summary": "Reset password",
        "description": "Reset the password.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResetPasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The password was reset."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "User not found or the forgot password token is invalid or expired."
          }
        }
      }
    },
    "/users/sessions": {
      "post": {
        "summary": "Create session",
        "description": "Create a session.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserCreateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "The email or password is incorrect."
          }
        }
      }
    },
    "/users/sessions/refresh": {
      "post": {
        "summary": "Refresh session",
        "description": "Refresh a session.",
        "tags": ["Users"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRefreshSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session was refreshed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/UserCreateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "The refresh token is invalid or expired."
          }
        }
      }
    },
    "/employees/verify-email/:email_verification_link_id": {
      "get": {
        "summary": "Verify email address",
        "description": "Verify the email address provided by the user.",
        "tags": ["Employees"],
        "parameters": [
          {
            "name": "email_verification_link_id",
            "in": "path",
            "description": "The email verification link ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "302": {
            "description": "The email address was verified and the user should be redirected to the phone number verification page."
          },
          "404": {
            "description": "The email verification link ID is invalid or expired."
          }
        }
      }
    },
    "/employees/verify-phone-number": {
      "post": {
        "summary": "Verify phone number",
        "description": "Verify the phone number provided by the user.",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifyPhoneNumberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The phone number was verified."
          },
          "404": {
            "description": "The SMS code is invalid or expired."
          },
          "400": {
            "description": "Body validation failed."
          }
        }
      }
    },
    "/employees/verify-email/resend": {
      "post": {
        "summary": "Resend email verification",
        "description": "Resend the email verification email.",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserResendEmailVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The email verification email was resent."
          },
          "403": {
            "description": "The email address provided is already verified."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Email not found or the email verification link is invalid or expired."
          }
        }
      }
    },
    "/employees/verify-phone-number/resend": {
      "post": {
        "summary": "Resend phone number verification",
        "description": "Resend the phone number verification SMS.",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendPhoneNumberVerificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The phone number verification SMS was resent."
          },
          "403": {
            "description": "The phone number provided is already verified."
          },
          "400": {
            "description": "Body validation failed."
          },
          "404": {
            "description": "Account not found or the phone number SMS code is invalid or expired."
          }
        }
      }
    },
    "/employees/sessions": {
      "post": {
        "summary": "Create session",
        "description": "Create a session.",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmployeeCreateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "The email or password is incorrect."
          }
        }
      }
    },
    "/employees/sessions/refresh": {
      "post": {
        "summary": "Refresh session",
        "description": "Refresh a session.",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRefreshSessionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The session was refreshed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmployeeCreateSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "403": {
            "description": "The refresh token is invalid or expired."
          }
        }
      }
    },
    "/employees": {
      "post": {
        "summary": "Create employee",
        "description": "Create an employee.",
        "tags": ["Employees"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The employee was created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/EmployeeCreateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Body validation failed."
          },
          "401": {
            "description": "Missing a valid access token."
          },
          "403": {
            "description": "The email or phone number is already in use, or the user does not have enough permissions, or the operation could not be done."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserRefreshSessionRequest": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "EmployeeCreateResponse": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "EmployeeCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone_number": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "franchises_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "EmployeeCreateSessionResponse": {
        "type": "object",
        "properties": {
          "employee": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "phone_number": {
                "type": "string"
              },
              "roles": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "UserCreateSessionResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "type": "string"
              },
              "email": {
                "type": "string",
                "format": "email"
              },
              "phone_number": {
                "type": "string"
              }
            }
          },
          "access_token": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "UserCreateSessionRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "UserResetPasswordRequest": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "password_confirmation": {
            "type": "string"
          }
        }
      },
      "UserVerifyForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "UserVerifyForgotPasswordResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "UserForgotPasswordRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "PreSignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "price_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "PreSignUpResponse": {
        "type": "object",
        "properties": {
          "verified": {
            "type": "boolean"
          },
          "checkout_url": {
            "type": "string",
            "format": "url"
          }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "password_confirmation": {
            "type": "string",
            "format": "password"
          },
          "company_name": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "SignUpResponse": {
        "type": "object",
        "properties": {
          "company_id": {
            "type": "string",
            "format": "uuid"
          },
          "employee_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "VerifyPhoneNumberRequest": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "email_verified": {
            "type": "boolean"
          },
          "phone_number": {
            "type": "string"
          },
          "phone_number_verified": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "genre": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "street": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "complement": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "zip_code": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              }
            }
          },
          "profile_photo": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "url": {
                "type": "string",
                "format": "url"
              }
            }
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UserChangePasswordRequest": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "new_password_confirmation": {
            "type": "string"
          }
        }
      },
      "ResendEmailVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "price_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserResendEmailVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "ResendPhoneNumberVerificationRequest": {
        "type": "object",
        "properties": {
          "employee_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "UserResendPhoneNumberVerificationRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "CreateCheckoutSessionRequest": {
        "type": "object",
        "properties": {
          "price_id": {
            "type": "string",
            "format": "uuid"
          },
          "employee_id": {
            "type": "string",
            "format": "uuid"
          }
        }
      },
      "CreateCheckoutSessionResponse": {
        "type": "object",
        "properties": {
          "checkout_url": {
            "type": "string"
          }
        }
      },
      "UserSignUpRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "format": "password"
          },
          "password_confirmation": {
            "type": "string",
            "format": "password"
          },
          "genre": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "address": {
            "type": "object",
            "properties": {
              "street": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "district": {
                "type": "string"
              },
              "complement": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "zip_code": {
                "type": "string"
              },
              "country": {
                "type": "string"
              }
            }
          }
        }
      },
      "UserSignUpResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      },
      "UserVerifyPhoneNumberRequest": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "UserProfilePhotoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "number"
          },
          "key": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "format": "url"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
